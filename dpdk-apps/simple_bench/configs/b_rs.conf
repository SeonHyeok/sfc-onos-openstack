# Note that config file parsing is not tested against invalid
# or missing configurations because and is missing lots of error handling,
# so double check yout configuration file if something goes wrong.

# Number of Cores used by the application
cores = 1;

# Bitmask of ports which should be used.
port_mask = 0x03;

bench_senders:
(
    {
        # Core on wich all packets should be processed:
        core_id = 0;

        # Port where the packets should be send from:
        out_port = 0;

        # Destination MAC:
        dst_mac = "02:00:00:00:00:01";

        # Own IP address:
        src_ip = "10.1.0.3";
        # Destination IP:
        dst_ip = "10.1.0.8";

        # Destination UDP port:
        dst_udp_port = 666;

        # packet_size > IP + UDP + 16 (in byte)
        sequence = (
            {
                packet_interval = 1000;
                packet_nb = 10000;
                packet_size = 1400;
            },            {
                packet_interval = 500;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 450;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 400;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 350;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 300;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 250;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 200;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 150;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 100;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 50;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 25;
                packet_nb = 100000;
                packet_size = 1400;
            },{
                packet_interval = 10;
                packet_nb = 100000;
                packet_size = 1400;
            }
        )
    },{
        # Core on wich all packets should be processed:
        core_id = 0;

        # Port where the packets should be send from:
        out_port = 1;

        # Destination MAC:
        dst_mac = "02:00:00:00:00:FF";

        # Own IP address:
        src_ip = "10.3.0.3";
        # Destination IP:
        dst_ip = "10.3.0.8";

        # Destination UDP port:
        dst_udp_port = 666;

        # packet_size > IP + UDP + 8 (in byte)
        sequence = (
            {
                packet_interval = 9000000;
                packet_nb = 0xFFFFFFFF;
                packet_size = 100;
            }
        )
    }

);

bench_receivers:
(
    {
        # Core on wich all packets should be processed:
        core_id = 0;

        # Network Port where the packets should be send from:
        in_port = 1;

        # UDP Port where the packets should be send from:
        dst_udp_port = 666;

        # Log file
        sequence_log_name = [
            "10K_1000us_1400bit.csv",
            "100K_450us_1400bit.csv",
            "100K_400us_1400bit.csv",
            "100K_350us_1400bit.csv",
            "100K_300us_1400bit.csv",
            "100K_250us_1400bit.csv",
            "100K_200us_1400bit.csv",
            "100K_150us_1400bit.csv",
            "100K_100us_1400bit.csv",
            "100K_50us_1400bit.csv",
            "100K_25us_1400bit.csv",
            "100K_10us_1400bit.csv"
        ];
    }
);

bench_forwarders:();